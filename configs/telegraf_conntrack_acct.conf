# Telegraf's conntrack plugin gathers metrics about conntrack limit
[[inputs.conntrack]]
  files = ["ip_conntrack_count","ip_conntrack_max", "nf_conntrack_count","nf_conntrack_max"]
  dirs = ["/proc/sys/net/ipv4/netfilter","/proc/sys/net/netfilter"]

# Gather output of conntrack_accounting_tool
[[inputs.tail]]
  files = ["/tmp/conntrack_acct"]
  from_beginning = false
  pipe = true
  data_format = "csv"
  csv_header_row_count = 0
  # <ts>,tcp,10.32.251.1,10.32.250.2,443,16,13,3220,1884,1,65021,3
  csv_column_names = ["time", "proto", "src", "dst", "port", "src_packets", "dst_packets", "src_bytes", "dst_bytes", "connection_count", "connection_times", "open_connections"]
  csv_column_types = ["int", "string", "string", "string", "int", "int", "int", "int", "int", "int", "int", "int"]
  csv_tag_columns = ["proto", "src", "dst", "port"]
  csv_timestamp_column = "time"
  csv_timestamp_format = "unix_ns"
  csv_skip_rows = 0
  csv_skip_columns = 0
  name_override="traffic"

# Write everything to InfluxDB
[[outputs.influxdb]]
  urls = ["http://1.2.3.4:8086"]
  database = "..."
  username = "admin"
  password = "..."

# (optional) ping a self-hosted machine to detect network errors early
#[[inputs.ping]]
#    urls = ["10.32.1.1"]
#    method = "native"
#    count = 3
